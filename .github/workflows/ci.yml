name: CI

on:
    push:
        branches: [master]
    pull_request:

env:
    CARGO_TERM_COLOR: always

jobs:
    test:
        name: test ${{ matrix.os }} (${{ matrix.flags.name }})
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: ["ubuntu-latest", "macos-latest", "windows-latest"]
                flags:
                    - name: no default features
                      flags: --workspace --no-default-features
                    - name: default features
                      flags: --workspace
                    - name: all features
                      flags: --workspace --all-features

        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@stable
            - uses: Swatinem/rust-cache@v2
            - name: test ${{ matrix.flags.flags }}
              run: cargo test ${{ matrix.flags.flags }}

    feature-checks:
        name: feature checks
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@nightly
            - uses: taiki-e/install-action@cargo-hack
            - uses: Swatinem/rust-cache@v2
            - name: cargo hack
              run:
                  cargo hack check --all --feature-powerset --depth 2 -Z avoid-dev-deps --keep-going

    clippy:
        name: clippy
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@nightly
              with:
                  components: clippy
            - uses: Swatinem/rust-cache@v2
            - name: clippy
              run: cargo clippy --workspace --tests --all-features
              env:
                  RUSTFLAGS: "-D warnings"

    docs:
        name: docs
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@nightly
              with:
                  components: rust-docs
            - uses: Swatinem/rust-cache@v2
            - name: doc
              run: cargo doc --workspace --all-features --no-deps --document-private-items
              env:
                  RUSTFLAGS: "--cfg docsrs"
                  RUSTDOCFLAGS: "--cfg docsrs -D warnings"

    fmt:
        name: fmt
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@nightly
              with:
                  components: rustfmt
            - name: fmt --check
              run: cargo fmt --all --check
